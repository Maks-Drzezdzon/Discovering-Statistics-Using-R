load("C:\\Users\\JarrettPE\\Documents\\GitHub\\Discovering-Statistics-Using-R\\Chapter 4\\chapter 4 workspace")
metallicaAges
metallicaAges
install.packages("ggplot2")
library(ggplot2)
install.packages
install.packages("foreign")
install.packages("Hmisc")
install.packages("Rcmdr", dependencies = TRUE)
install.packages("reshape")
install.packages("plyr")
library(ggplot2)
library(reshape)
library(plyr)
install.packages(c("ggplot2", "plyr"))
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
library(ggplot2)
utils:::menuInstallLocal()
utils:::menuInstallLocal()
library(ggplot2)
utils:::menuInstallLocal()
library(ggplot2)
utils:::menuInstallLocal()
library(ggplot2)
utils:::menuInstallLocal()
utils:::menuInstallLocal()
library(ggplot2)
install.packages(ggplot2, dependencies = TRUE)
install.packages("Rcmdr", dependencies = TRUE)
library(Rcmdr)
library(Rcmdr)
chooseCRANmirror()
install.packages("Rcmdr", dependencies = TRUE)
library(Rcmdr)
setRepositories()
update.packages(ask='graphics',checkBuilt=TRUE)
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
library(ggplot2)
utils:::menuInstallLocal()
library(ggplot2)
utils:::menuInstallLocal()
library(ggplot2)
metallicaAges
festival.data <- read.delim("DownloadFestival.dat", header = TRUE)
getwd()
setwd("C:/Users/JarrettPE/Documents/GitHub/Discovering-Statistics-Using-R/Chapter 4"
setwd("C:/Users/JarrettPE/Documents/GitHub/Discovering-Statistics-Using-R/Chapter4")
setwd("C:/Users/JarrettPE/Documents/GitHub/Discovering-Statistics-Using-R/Chapter4")
getwd()
festival.data <- read.delim("DownloadFestival.dat", header = TRUE)
festival.data
getwd()
festival.data
festival.histogram <- ggplot(festival.data, aes(day1)) + opts(legend.position = "none")
festival.histogram <- ggplot(festival.data, aes(day1)) + labs(legend.position = "none")
festival.histogram
festival.histogram + geom_histogram()
+ geom_histogram(binwidth = 0.4)
festival.histogram + geom_histogram(binwidth = 0.4)
festival.histogram + geom_histogram(binwidth = 0.2)
festival.histogram + geom_histogram(binwidth = 2)
festival.histogram + geom_histogram(binwidth = 0.4)
festival.histogram + geom_histogram(binwidth = 0.4) + labs(x = "Hygiene (Day 1 of Festival)", y = "Frequency")
ggsave("Day 1 Hygeine Histogram")
help(ggsave)
ggsave("Day 1 Hygeine Histogram.png")
festival.boxplot <- ggplot(festival.data, aes(gender, day1))
festival.boxplot + geom_boxplot() + labs(x = "Gender", y = "Hygiene (Day1 of Festival)")
festival.data
festival.data <- festival.data[order(festival.data$day1),]
festival.data
libaray(Rcmdr)
library(Rcmdr)
utils:::menuInstallPkgs()
library(Rcmdr)
utils:::menuInstallPkgs()
library(Rcmdr)
utils:::menuInstallLocal()
utils:::menuInstallLocal()
utils:::menuInstallLocal()
library(Rcmdr)
utils:::menuInstallLocal()
library(Rcmdr)
install.packages("Rcmdr")
library(Rcmdr)
utils:::menuInstallLocal()
utils:::menuInstallLocal()
install.packages("Rcmdr")
library(Rcmdr)
utils:::menuInstallLocal()
library(Rcmdr)
utils:::menuInstallLocal()
library(Rcmdr)
utils:::menuInstallLocal()
library(Rcmdr)
utils:::menuInstallLocal()
library(Rcmdr)
utils:::menuInstallLocal()
library(Rcmdr)
utils:::menuInstallLocal()
library(Rcmdr)
utils:::menuInstallPkgs()
utils:::menuInstallLocal()
library(Rcmdr)
utils:::menuInstallPkgs()
utils:::menuInstallLocal()
library(Rcmdr)
utils:::menuInstallLocal()
library(Rcmdr)
utils:::menuInstallLocal()
utils:::menuInstallLocal()
library(Rcmdr)
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallLocal()
library(Rcmdr)
utils:::menuInstallLocal()
library(Rcmdr)
utils:::menuInstallLocal()
library(Rcmdr)
library(Rcmdr)
utils:::menuInstallLocal()
library(Rcmdr)
utils:::menuInstallLocal()
library(Rcmdr)
library(Rcmdr)
Commander
library(Rcmdr)
Commander()
outlierSummary<-function(variable, digits = 2){
zvariable<-(variable-mean(variable, na.rm = TRUE))/sd(variable, na.rm = TRUE)
outlier95<-abs(zvariable) >= 1.96
outlier99<-abs(zvariable) >= 2.58
outlier999<-abs(zvariable) >= 3.29
ncases<-length(na.omit(zvariable))
percent95<-round(100*length(subset(outlier95, outlier95 == TRUE))/ncases, digits)
percent99<-round(100*length(subset(outlier99, outlier99 == TRUE))/ncases, digits)
percent999<-round(100*length(subset(outlier999, outlier999 == TRUE))/ncases, digits)
cat("Absolute z-score greater than 1.96 = ", percent95, "%", "\n")
cat("Absolute z-score greater than 2.58 = ",  percent99, "%", "\n")
cat("Absolute z-score greater than 3.29 = ",  percent999, "%", "\n")
}
outlierSummary(festival.data$day1)
outlierSummary(festival.data$day2)
Commander()
festival.data
festival.boxplot + geom_boxplot() + labs(x = "Gender", y = "Hygiene (Day1 of Festival)")
festival.boxplot + geom_boxplot() + labs(x = "Gender", y = "Hygiene (Day1 of Festival)")
festival.boxplot <- ggplot(festival.data, aes(gender, day1))
festival.boxplot + geom_boxplot() + labs(x = "Gender", y = "Hygiene (Day1 of Festival)")
ggsave("Day 1 Hygeine Boxplot without outlier")
ggsave("Day 1 Hygeine Boxplot without outlier.png")
density <- ggplot(festival.data, aes(day1))
density + geom_density() + labs(x = "Hygiene (Day 1 of Festival)", y = "Density Estimate")
ggsave("Day 1 Hygeine Density Plot.png")
chick.flick <- read.delim("ChickFlick.dat", header = TRUE)
chick.flick
bar <- ggplot(chick.flick, aes(film, arousal))
bar
bar + stat_summary(fun.y = mean, geom = "bar", fill = "White", color = "Black") + stat_summary(fun.data = mean_cl_normal, geom = "pointrange") + labs(x = "Film", y = "Mean Arousal")
bar + stat_summary(fun.y = mean, geom = "bar", fill = "White", color = "Black") + stat_summary(fun.data = mean_cl_normal, geom = "pointrange", color = "red") + labs(x = "Film", y = "Mean Arousal")
bar + stat_summary(fun.y = mean, geom = "bar", fill = "Green", color = "Black") + stat_summary(fun.data = mean_cl_normal, geom = "pointrange", color = "red") + labs(x = "Film", y = "Mean Arousal")
bar + stat_summary(fun.y = mean, geom = "bar", fill = "White", color = "Black") + stat_summary(fun.data = mean_cl_normal, geom = "pointrange", color = "red") + labs(x = "Film", y = "Mean Arousal")
ggsave("Mean Arousal ChickFlick (Error Bar Chart).png")
bar + stat_summary(fun.y = mean, geom = "bar", fill = "White", color = "Black") + stat_summary(fun.data = mean_cl_normal, geom = "errorbar", color = "red") + labs(x = "Film", y = "Mean Arousal")
bar + stat_summary(fun.y = mean, geom = "bar", fill = "White", color = "Black") + stat_summary(fun.data = mean_cl_normal, geom = "errorbar", color = "red") + labs(x = "Film", y = "Mean Arousal")
bar <- ggplot(chick.flick, aes(film, arousal, fill = gender))
bar + stat_summary(fun.y = mean, geom = "bar", position = "dodge") + stat_summary(fun.data = mean_cl_normal, geom = "errorbar", color = "red", position = position_dodge(width=0.90), width = 0.2) + labs(x = "Film", y = "Mean Arousal", fill = "Gender")
bar + stat_summary(aes(film, arousal, fill = gender ), fun.y = mean, geom = "bar", position="dodge") + stat_summary(aes(film, arousal, fill = gender ), fun.data = mean_cl_normal, geom = "errorbar", position=position_dodge(width=0.90), width = 0.2) + labs(x = "Film", y = "Mean Arousal", fill = "Gender")\
bar + stat_summary(aes(film, arousal, fill = gender ), fun.y = mean, geom = "bar", position="dodge") + stat_summary(aes(film, arousal, fill = gender ), fun.data = mean_cl_normal, geom = "errorbar", position=position_dodge(width=0.90), width = 0.2) + labs(x = "Film", y = "Mean Arousal", fill = "Gender")
utils:::menuInstallLocal()
utils:::menuInstallLocal()
bar + stat_summary(aes(film, arousal, fill = gender ), fun.y = mean, geom = "bar", position="dodge") + stat_summary(aes(film, arousal, fill = gender ), fun.data = mean_cl_normal, geom = "errorbar", position=position_dodge(width=0.90), width = 0.2) + labs(x = "Film", y = "Mean Arousal", fill = "Gender")
ggsave("04 Chick Flick Clustered Error Bar.png")
bar <- ggplot(chick.flick, aes(film, arousal, fill = film))
bar + stat_summary(fun.y = mean, geom = "bar") + stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) + facet_wrap(~gender) + labs(x = "Film", y = "Mean Arousal") + opts(legend.position="none")
bar + stat_summary(fun.y = mean, geom = "bar") + stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) + facet_wrap(~gender) + labs(x = "Film", y = "Mean Arousal") + labs(legend.position="none")
ggsave("04 Chick Flick Facet Error Bar.png")
chick.flick
hiccups.data <- read.delim("Hiccups.dat", header = TRUE)
hiccups.data
hiccups <- stack(hiccups.data)
hiccups
names(hiccups) <- c("Hiccups", "Intervention")
hiccups
hiccups$Intervention_Factor <- factor(hiccups$Intervention, level = hiccups$Intervention)
hiccups$Intervention_Factor <- factor(hiccups$Intervention, levels(hiccups$Intervention)[c(1,4,2,3)])
hiccups
line <- ggplot(hiccups, aes(Intervention_Factor, Hiccups))
line
line + stat_summary(fun.y = mean, geom = "point") + stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2) + labs(x = "Intervention", y = "Mean Number of Hiccups") + stat_summary(fun.y = mean, geom = "line", aes(group=1),colour = "Red", linetype = "dashed")
ggsave("04 Hiccups Line.png")
text.data <- read.delim("TextMessages.dat", header = TRUE)
text.data
text.messages <- stack(text.data)
textMessages<-melt(textData, id = c("id", "Group"), measured = c("Baseline", "Six_months"))
utils:::menuInstallLocal()
textMessages<-melt(textData, id = c("id", "Group"), measured = c("Baseline", "Six_months"))
library(reshape)
textMessages<-melt(textData, id = c("id", "Group"), measured = c("Baseline", "Six_months"))
textMessages<-melt(text.data, id = c("id", "Group"), measured = c("Baseline", "Six_months"))
textMessages<-melt(text.data, id = c(""Group"), measured = c("Baseline", "Six_months"))
textMessages<-melt(text.data, id = c("Group"), measured = c("Baseline", "Six_months"))
textMessages
names(textMessages) <- ("Group", "Time", "Grammer_Score")
names(textMessages) <- c("Group", "Time", "Grammer_Score")
textMessages
textMessages$Time <- factor(textMessages$Time, labels = c("Baseline", "6 Months"))
textMessages
print(textMessages)
line <- ggplot(textMessages, aes(Time, Grammar_Score, colour = Group))
line + stat_summary(fun.y = mean, geom = "point") + stat_summary(fun.y = mean, geom = "line", aes(group= Group)) + stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2) + labs(x = "Time", y = "Mean Grammar Score", colour = "Group") 
print(textMessages)
line <- ggplot(textMessages, aes(Time, Grammer_Score, colour = Group))
line + stat_summary(fun.y = mean, geom = "point") + stat_summary(fun.y = mean, geom = "line", aes(group= Group)) + stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2) + labs(x = "Time", y = "Mean Grammar Score", colour = "Group") 
ggsave("04 Text Message Line 2.png")
library(car)
library(pastecs)
library(psych)
utils:::menuInstallLocal()
utils:::menuInstallLocal()
library(psych)
library(pastecs)
library(psych)
utils:::menuInstallLocal()
library(psych)
print("Test")
getwd()
setwd("C:/Users/JarrettPE/Documents/GitHub/Discovering-Statistics-Using-R/Chapter 5")
getwd()
dlf <- read.delim("DownloadFestival(No Outlier).dat", header = TRUE)
dif
dlf
hist.day1 <- ggplot(dlf, aes(day1)) + labs(legend.position = "none") + geom_histogram(aes(y=..density..), colour="black", fill="white") + labs(x="Hygiene score on day 1", y = "Density")
hist.day1
ggsave("05 Histogram for Hygeine Score Day1.png")
q()
