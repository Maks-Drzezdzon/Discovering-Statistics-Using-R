getwd()
setwd("GitHub/Discovering-Statistics-Using-R/Chapter 7")
getwd()
setwd(file.choose())
load("C:\\Users\\JarrettPE\\Documents\\GitHub\\Discovering-Statistics-Using-R\\Chapter 7\\.RData")
getwd()
album.sales.3
durbinWatsonTest(album.sales.3)
dwt(album.sales.3)
vif(album.sales.3)
library(QuantPsyc)
library(car)
library(boot)
library(Rcmdr)
vif(album.sales.3)
durbinWatsonTestdurbinWatsonTest(album.sales.3)
dwt(album.sales.3)
1/vif(album.sales.3)
mean(vif(album.sales.3))
hist(album2$studentized.residuals)
hist(rstudent(album.sales.3))
help(rstudent)
histogram<-ggplot(album2, aes(studentized.residuals)) + opts(legend.position = "none") + geom_histogram(aes(y=..density..), colour="black", fill="white") + labs(x = "Studentized Residual", y = "Density")
histogram + stat_function(fun = dnorm, args = list(mean = mean(album2$studentized.residuals, na.rm = TRUE), sd = sd(album2$studentized.residuals, na.rm = TRUE)), colour = "red", size = 1)
library(ggplot20
library(ggplot2)
histogram<-ggplot(album2, aes(studentized.residuals)) + opts(legend.position = "none") + geom_histogram(aes(y=..density..), colour="black", fill="white") + labs(x = "Studentized Residual", y = "Density")
histogram + stat_function(fun = dnorm, args = list(mean = mean(album2$studentized.residuals, na.rm = TRUE), sd = sd(album2$studentized.residuals, na.rm = TRUE)), colour = "red", size = 1)
histogram<-ggplot(album2, aes(studentized.residuals)) + opts(legend.position = "none") + geom_histogram(aes(y=..density..), colour="black", fill="white") + labs(x = "Studentized Residual", y = "Density")
library(ggplot2)
histogram<-ggplot(album2, aes(studentized.residuals)) + opts(legend.position = "none") + geom_histogram(aes(y=..density..), colour="black", fill="white") + labs(x = "Studentized Residual", y = "Density")
histogram<-ggplot(album2, aes(studentized.residuals)) + labs(legend.position = "none") + geom_histogram(aes(y=..density..), colour="black", fill="white") + labs(x = "Studentized Residual", y = "Density")
histogram + stat_function(fun = dnorm, args = list(mean = mean(album2$studentized.residuals, na.rm = TRUE), sd = sd(album2$studentized.residuals, na.rm = TRUE)), colour = "red", size = 1)
ggsave("07 album sales ggplot Hist.png")
scatter <- ggplot(album2, aes(fitted, studentized.residuals))
scatter + geom_point() + geom_smooth(method = "lm", colour = "Red")+ labs(x = "Fitted Values", y = "Studentized Residual") 
scatter <- ggplot(album2, aes(fitted, studentized.residuals))
scatter + geom_point() + geom_smooth(method = "lm", colour = "Red")+ labs(x = "Fitted Values", y = "Studentized Residual") 
SCATTER
scatter
scatter <- ggplot(album2, aes(fitted, studentized.residuals))
scatter
album2
scatter <- ggplot(album2, aes(fitted, studentized.residuals))
scatter + geom_point()
qqplot.resid <- qplot(sample = album2$studentized.residuals, stat="qq") + labs(x = "Theoretical Values", y = "Observed Values") 
qqplot.resid
qqplot.resid <- qplot(sample = album2$studentized.residuals) + labs(x = "Theoretical Values", y = "Observed Values") 
qqplot.resid
ggsave("07 Album sales ggplot QQ.png")
bootReg<-function(formula, data, i)
{
d <- data[i,]
fit <- lm(formula, data = d)
return(coef(fit))
}
bootResults<-boot(statistic = bootReg, formula = sales ~ adverts + airplay + attract, data = album2, R = 2000)
#---We can then obtaine the bootstrap confidence intervals for the intercept:---
boot.ci(bootResults, type = "bca", index = 1)
#---And the three slope estimates---
boot.ci(bootResults, type = "bca", index = 2)
boot.ci(bootResults, type = "bca", index = 3)
boot.ci(bootResults, type = "bca", index = 4)
gfr<-read.delim(file.choose(), header = TRUE)
gfr<-read.delim(file.choose(), header = TRUE)
glastonburyModel<-lm(change ~ music, data = gfr)
summary(glastonburyModel)
crusty_v_NMA<-c(1, 0, 0, 0)
indie_v_NMA<-c(0, 1, 0, 0)
metal_v_NMA<-c(0, 0, 1, 0)
contrasts(gfr$music)<-cbind(crusty_v_NMA, indie_v_NMA, metal_v_NMA)
attr(,"contrasts")
gfr$music
summary(glastonburyModel)
#set contrasts quickly
contrasts(gfr$music)<-contr.treatment(4, base = 4)
#set contrasts with helpful names
crusty_v_NMA<-c(1, 0, 0, 0)
indie_v_NMA<-c(0, 1, 0, 0)
metal_v_NMA<-c(0, 0, 1, 0)
contrasts(gfr$music)<-cbind(crusty_v_NMA, indie_v_NMA, metal_v_NMA)
lm(change ~ music, data = gfr) 
summary(lm(change ~ music, data = gfr) )
getwd()
setwd("../Chapter 8/")
getwd()
install.packages("car"
)
install.packages("mlogit")
library("mlogit")
eelData<-read.delim("eel.dat", header = TRUE)
eelData<-read.delim("Scripts/eel.dat", header = TRUE)
eelData<-read.delim("Data Files//eel.dat", header = TRUE)
eelData
head(eelData)
eelData$Cured<-relevel(eelData$Cured, "Not Cured")
eelData$Intervention<-relevel(eelData$Intervention, "No Treatment")
commander()
library(Rcmdr)
Rcmdr()
Commander
Commmander()
library("Rcmdr")
Rcommnader
Rcommander
Rmdr()
Rcmdr()
Commander()
eelModel.1 <- glm(Cured ~ Intervention, data = eelData, family = binomial())
eelModel.2 <- glm(Cured ~ Intervention + Duration, data = eelData, family = binomial())
eelModel.1
summary(eelModel.1)
summary(eelModel.2)
modelChi <- eelModel.1$null.deviance - eelModel.1$deviance
modelChi
round(modelChi,3)
q()
